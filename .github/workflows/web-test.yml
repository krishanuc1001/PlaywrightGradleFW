name: Run Playwright tests using GitHub actions

on: # 1. Choose the trigger
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  Run-Playwright-web-tests:
    runs-on: ubuntu-latest # 2. Choose the runner
    container:
      image: mcr.microsoft.com/playwright:v1.27.1-focal

    steps:
      - name: Checkout repository into the runner
        uses: actions/checkout@v3 # 3. Checkout git repo

      - name: Set up Java
        uses: actions/setup-java@v3 # 4. Set up Java in runner
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build & Install
        run: mvn -B install -D skipTests --no-transfer-progress

      - name: Install Playwright
        run: mvn exec:java -e -Dexec.mainClass=com.microsoft.playwright.CLI -Dexec.args="install --with-deps"

#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v2
#        with:
#          gradle-version: 7.4.2

      # Cache Gradle dependencies
      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      # Cache Gradle Wrapper
      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Save Docker images cache
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: Set up Selenoid Container
        uses: n-ton4/selenoid-github-action@master # 5. Set up and start Selenoid inside container
        id: start-selenoid
        continue-on-error: false
        with:
          version: 1.10.1
          args: -limit 10
          browsers: chrome
          last-versions: 1

      - name: Run tests
        run: |
          ./gradlew clean test --info # 6. Run tests
          mkdir github-pages-dir
          cd ExtentReport-output
          mkdir extent-report
          mv *.html extent-report/index.html
          cd ..
          mv ExtentReport-output/* github-pages-dir

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: github-pages-dir